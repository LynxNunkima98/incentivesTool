{"version":3,"sources":["webpack:///src/app/tabs/tabs.page.html","webpack:///src/app/tabs/tabs-routing.module.ts","webpack:///src/app/tabs/tabs.module.ts","webpack:///src/app/tabs/tabs.page.scss","webpack:///src/app/tabs/tabs.page.ts"],"names":["routes","path","component","children","loadChildren","then","m","Tab1PageModule","Tab2PageModule","Tab3PageModule","redirectTo","pathMatch","TabsPageRoutingModule","imports","forChild","exports","TabsPageModule","declarations","TabsPage","authService","router","alertController","handlerMessage","roleMessage","create","header","buttons","text","role","handler","logout","navigateByUrl","replaceUrl","alert","present","onDidDismiss","selector","template"],"mappings":"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","file":"tabs-tabs-module-es5.js","sourcesContent":["export default \"<ion-tabs>\\n\\n  <ion-tab-bar slot=\\\"bottom\\\">\\n    <ion-tab-button tab=\\\"tab1\\\">\\n      <ion-icon name=\\\"pencil\\\"></ion-icon>\\n      <ion-label>Add Monthly Entry</ion-label>\\n    </ion-tab-button>\\n\\n    <!-- <ion-tab-button tab=\\\"tab2\\\">\\n      <ion-icon name=\\\"ellipse\\\"></ion-icon>\\n      <ion-label>Tab 2</ion-label>\\n    </ion-tab-button> -->\\n\\n    <ion-tab-button (click)=\\\"logout()\\\">\\n      <ion-icon name=\\\"exit\\\"></ion-icon>\\n      <ion-label>Logout & Exit</ion-label>\\n    </ion-tab-button>\\n  </ion-tab-bar>\\n\\n</ion-tabs>\\n\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TabsPage } from './tabs.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TabsPage,\n    children: [\n      {\n        path: 'tab1',\n        loadChildren: () => import('../tab1/tab1.module').then(m => m.Tab1PageModule)\n      },\n      {\n        path: 'tab2',\n        loadChildren: () => import('../tab2/tab2.module').then(m => m.Tab2PageModule)\n      },\n      {\n        path: 'tab3',\n        loadChildren: () => import('../tab3/tab3.module').then(m => m.Tab3PageModule)\n      },\n      {\n        path: '',\n        redirectTo: '/tabs/tab1',\n        pathMatch: 'full'\n      }\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TabsPageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { TabsPageRoutingModule } from './tabs-routing.module';\n\nimport { TabsPage } from './tabs.page';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    TabsPageRoutingModule\n  ],\n  declarations: [TabsPage]\n})\nexport class TabsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYnMvdGFicy5wYWdlLnNjc3MifQ== */\";","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: 'tabs.page.html',\n  styleUrls: ['tabs.page.scss']\n})\nexport class TabsPage {\n\n  handlerMessage = '';\n  roleMessage = '';\n\n  constructor(private authService: AuthenticationService,\n    private router: Router,\n    private alertController: AlertController) {}\n\n  async logout() {\n    const alert = await this.alertController.create({\n      header: 'Alert!',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          handler: () => {\n            this.handlerMessage = 'Alert canceled';\n          },\n        },\n        {\n          text: 'Confirm & Exit',\n          role: 'confirm',\n          handler: async () => {\n            this.handlerMessage = 'Alert confirmed';\n            await this.authService.logout();\n            this.router.navigateByUrl('/', { replaceUrl: true });\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n\n    const { role } = await alert.onDidDismiss();\n    this.roleMessage = `Dismissed with role: ${role}`;\n    \n  }\n}\n"]}